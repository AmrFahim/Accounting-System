@model ALFATEX4TRADE.Models.Employee

@{
    ViewBag.Title = "Edit";
    List<SelectListItem> list = new List<SelectListItem>();
    SelectListItem work = new SelectListItem() { Text = "يعمل", Value = "يعمل" };
    SelectListItem notwork = new SelectListItem() { Text = "لا يعمل", Value = "لا يعمل" };
    list.Add(work);
    list.Add(notwork);

    List<SelectListItem> list2 = new List<SelectListItem>();
    SelectListItem ins = new SelectListItem() { Text = "مؤمن عليه ", Value = "true" };
    SelectListItem notins = new SelectListItem() { Text = "غير مؤمن عليه ", Value = "false" };
    list2.Add(ins);
    list2.Add(notins);


    List<SelectListItem> list3 = new List<SelectListItem>();
    SelectListItem a = new SelectListItem() { Text = "صالة 1", Value = "صالة 1" };
    SelectListItem b = new SelectListItem() { Text = "صالة 2", Value = "صالة 2" };
    SelectListItem c = new SelectListItem() { Text = "قص", Value = "قص" };
    SelectListItem d = new SelectListItem() { Text = "مكوى", Value = "مكوى" };
    SelectListItem e = new SelectListItem() { Text = "تعبئه", Value = "تعبئه" };
    SelectListItem f = new SelectListItem() { Text = "تشطيب", Value = "تشطيب" };
    SelectListItem g = new SelectListItem() { Text = "أخرى", Value = "أخرى" };
    list3.Add(a);
    list3.Add(b);
    list3.Add(c);
    list3.Add(d);
    list3.Add(e);
    list3.Add(f);
    list3.Add(g);
    
    
    
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EmpID)

        <div class="form-group">
            @Html.LabelFor(model => model.EmpID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmpID, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.EmpID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmpName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmpName, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.EmpName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Brithday, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Brithday, new { htmlAttributes = new { @class = "datepicker form-control", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Brithday, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Section, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Section, list3, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Section, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Base, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Base, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Base, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Status, list, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">
            @Html.LabelFor(model => model.insurance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.insurance, list2, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.insurance, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.AbsenceDays, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AbsenceDays, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.AbsenceDays, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Transportation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Transportation, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Transportation, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>





        <div class="form-group">
            @Html.LabelFor(model => model.Loan, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Loan, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Loan, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.PermissionTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PermissionTime, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.PermissionTime, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Late, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Late, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Late, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.OverTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OverTime, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.OverTime, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.BuyValue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BuyValue, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.BuyValue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.penalty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.penalty, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.penalty, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
